fails:Module#define_method when given an UnboundMethod correctly passes given arguments to the new method
fails:Module#define_method when given an UnboundMethod adds the new method to the methods list
fails:Module#define_method when given an UnboundMethod works for singleton classes too
fails:Module#define_method defines the given method as an instance method with the given name in self
fails:Module#define_method calls #method_added after the method is added to the Module
fails:Module#define_method accepts a Method (still bound)
fails:Module#define_method supports being called with a splat
fails:Module#define_method when given an UnboundMethod passes the given arguments to the new method
fails:Module#define_method when given an UnboundMethod defines a method on a singleton class
fails:Module#define_method passed { |a, *b|  } creates a method that raises an ArgumentError when passed zero arguments
fails:Module#define_method passed { |a, b, *c|  } creates a method that raises an ArgumentError when passed zero arguments
fails:Module#define_method passed { |a, b, *c|  } creates a method that raises an ArgumentError when passed one argument
fails:Module#define_method passed { |a, b, *c|  } creates a method that raises an ArgumentError when passed one argument and a block
